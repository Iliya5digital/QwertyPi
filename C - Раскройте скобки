#include <bits/stdc++.h>
 
#define int long long
using namespace std;
 
int a[200001];
int dp[200001][2];
int c[200001][2];
void solve(){
    int n, s; cin >> n >> s;
    for(int i = 0; i < n; i++){
        cin >> a[i];
    }
    for(int i = 0; i < n; i++){
        if(a[i] <= s) c[i][0] = 0, c[i][1] = a[i];
        else c[i][0] = s, c[i][1] = a[i] - s;
    }
    // memset(dp, 0x3f, sizeof(dp));
    // WTF have I done
    for(int i = 0; i <= n; i++){
        dp[i][0] = dp[i][1] = 1LL << 60;
    }
    dp[1][0] = a[0] * c[1][0], dp[1][1] = a[0] * c[1][1];
    for(int i = 2; i < n - 1; i++){
        dp[i][0] = min(dp[i][0], dp[i - 1][0] + c[i - 1][1] * c[i][0]);
        dp[i][0] = min(dp[i][0], dp[i - 1][1] + c[i - 1][0] * c[i][0]);
        dp[i][1] = min(dp[i][1], dp[i - 1][0] + c[i - 1][1] * c[i][1]);
        dp[i][1] = min(dp[i][1], dp[i - 1][1] + c[i - 1][0] * c[i][1]);
    }
    int i = n - 1;
    dp[n - 1][0] = min(dp[i][0], dp[i - 1][0] + c[i - 1][1] * a[n - 1]);
    dp[n - 1][0] = min(dp[i][0], dp[i - 1][1] + c[i - 1][0] * a[n - 1]);
    cout << dp[n - 1][0] << '\n';
}
 
int32_t main(){
    cin.tie(0); cout.tie(0)->sync_with_stdio(false);
    int t; cin >> t;
    while(t--){
        solve();
    }
}
